{"name":"Volley","tagline":"Android Volley, extended function of Android volley sdk.add progress in down and upload.  increase the speed of cache i/o.","body":"volley\r\n======\r\n需要的权限  \r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n\r\n###1.支持http 大文件上传以及下载，支持断点下载，下载中允许暂停，下次从暂停地方开始下载\r\n####初始化\r\n<p><code>HttpTools.init(context);</code></p>\r\n建议在Application的OnCreate中执行一次\r\n####普通http请求\r\n本来有八种谓词，考虑其他几种不常见，项目中用不上，暂时不提供。\r\nHttpTools提供get，post，upload，download，delete多种请求的封装，一行代码搞定各种异步请求\r\n\r\n    get(RequestInfo requestInfo, final HttpCallback httpResult);  \r\n    post(RequestInfo requestInfo, final HttpCallback httpResult);  \r\n    delete(RequestInfo requestInfo, final HttpCallback httpResult);  \r\n    put(RequestInfo requestInfo, final HttpCallback httpResult);\r\n\r\n####文件下载\r\n\r\n    DownloadRequest download(String url, String target, final boolean isResume, final HttpCallback httpResult)\r\n    DownloadRequest download(RequestInfo requestInfo, String target, final boolean isResume, final HttpCallback httpResult)\r\n\r\n设置参数isResume为true，即可实现断点续传，DownloadRequest提供stopDownload方法，可以随时停止当前的下载任务，再次下载将会从上次下载的地方开始下载。quitDownloadQueue允许强制关闭下载线程池，退出下载。可以在所有下载任务完成后关闭，节约资源。\r\n\r\n####文件上传\r\n\r\n    MultiPartRequest<String> upload(final String url, final Map<String, Object> params, final HttpCallback httpResult)\r\n    MultiPartRequest<String> upload(RequestInfo requestInfo, final HttpCallback httpResult)\r\n\r\nParams是表单参数，可以传入string和File类型的参数。当多个file对应一个key的时候。在key的后面加上索引即可。例如：\r\n\r\n    Map<String,Object> params = new HashMap<String, Object>();  \r\n    params.put(\"file0\", new File(\"/sdcard/a.jpg\"));  \r\n    params.put(\"file1\", new File(\"/sdcard/a.jpg\"));  \r\n    params.put(\"file2\", new File(\"/sdcard/a.jpg\"));  \r\n    params.put(\"name\", \"张三\");  \r\n    mHttpTools.upload(url, params, httpResult);\r\n\r\n这样，三个文件都使用同样的key（file）来上传。\r\n\r\n###2.默认开启gzip压缩\r\nImageRequest和DownloadRequest不启用Gzip，其他请求均默认开启Gzip\r\n###3.支持本地图片（res,asset,sdcard）\r\n####初始化\r\n\r\n    BitmapTools.init(context);\r\n\r\n建议在Application的OnCreate中执行一次\r\n\r\nBitmapTools的display方法支持各种图片的异步加载\r\nBitmapTools的display方法支持各种图片的异步加载\r\n\r\n    BitmapTools bitmapTools = new BitmapTools(mContext);  \r\n    bitmapTools.display(view, uri);\r\n\r\n配置类BitmapDisplayConfig.java。可以配置的有：\r\n默认加载图片，\r\n加载失败图片，\r\n图片尺寸，\r\n加载的动画，\r\n图片圆角属性。\r\nBitmapTools中提供多种方法配置BitmapDisplayConfig，配置过后，BitmapTools将采用该配置来加载显示图片，也可以在display方法中带上配置参数，这种方式不会影响整体配置，只为该次展示图片所使用。\r\n\r\n    bitmapTools.display(final View view, String uri, BitmapDisplayConfig displayConfig);\r\n\r\n###4.diskcache默认使用DiskLruCache，memoryCache默认使用LruCache\r\n\r\n###5.request请求添加进度监听（包括上传进度以及加载进度）\r\n\r\n###6.允许暂停和继续请求队列\r\n\r\n    bitmapTools.resume();\r\n    bitmapTools.pause();\r\n###7.DbTools模块\r\n数据库模块集成了xUtils中DbUtils。  \r\n使用方法参考xUtils。  \r\n注意：  \r\n注解类型不要混淆，需要映射的实体类不要混淆  \r\n添加混淆配置：-keep class * extends java.lang.annotation.Annotation { *; }","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}